---
// Define the Props interface
interface Props {
  name: string;
  age: string;
  gender: string;
  description: string;
  photoUrl: string;
  instagramLink: string;
}

// Extract props
const { name, age, gender, description, photoUrl, instagramLink } = Astro.props;

// Process data
const genderImage = "/images/icons8-" + gender + ".webp";
const paragraphs = description
  ? description.split("\n")
  : [`${name} is amazing!`];
---

<div class="rounded-md max-w-md mx-auto shadow-card overflow-hidden bg-gray-50">
  <!-- Instagram Link with Photo -->
  <a
    href={instagramLink}
    target="_blank"
    rel="noopener noreferrer"
    class="block relative"
  >
    <img src={photoUrl} alt={name} class="w-full h-64 object-cover" />
    <div
      class="absolute inset-0 flex items-center justify-center bg-black bg-opacity-50 opacity-0 hover:opacity-100 transition-opacity duration-300"
    >
      <span class="text-white text-lg font-semibold">View on Instagram</span>
    </div>
  </a>

  <!-- Content Area -->
  <div class="p-6">
    <!-- Header with Name and Age -->
    <div class="flex items-center justify-between mb-4">
      <div class="flex items-center space-x-3">
        <!-- Cat Icon -->
        <div class="bg-color rounded-full p-2">
          <img
            src="/images/icons8-cat-64.webp"
            alt="cat icon"
            class="w-8 h-8"
          />
        </div>

        <!-- Name and Gender Icon -->
        <div class="flex items-center space-x-1">
          <h2 class="text-xl font-semibold text-gray-800">{name}</h2>
          <img width="22" height="22" src={genderImage} alt={gender} />
        </div>
      </div>

      <!-- Age -->
      <p class="text-sm text-gray-500">{age} old</p>
    </div>

    <!-- Description -->
    <div class="text-gray-700 space-y-4 h-48 overflow-y-scroll">
      {paragraphs.map((paragraph) => <p>{paragraph}</p>)}
    </div>
  </div>
</div>
